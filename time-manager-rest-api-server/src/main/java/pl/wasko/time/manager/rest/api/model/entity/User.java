/*
 * Created on 2020-07-10 ( Time 09:27:29 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
// This Bean has a basic Primary Key (not composite) 

package pl.wasko.time.manager.rest.api.model.entity;

import org.hibernate.annotations.Where;
import pl.wasko.time.manager.rest.api.model.enumeration.HistoryElementEnum;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "users"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="users")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Users.countAll", query="SELECT COUNT(x) FROM User x" )
} )
@Where(clause = "deleted='0'")
public class User implements Serializable, Archivable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id_user", nullable=false)
    private Integer    idUser       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="password", nullable=false, length=255)
    private String     password     ;

    @Column(name="first_name", nullable=false, length=255)
    private String     firstName    ;

    @Column(name="last_name", nullable=false, length=255)
    private String     lastName     ;

    @Column(name="deleted", nullable=false)
    private Boolean    deleted      ;

    @Column(name="is_active", nullable=false)
    private Boolean    active      ;

	// "emailId" (column "email_id") is not defined by itself because used as FK in a link 
	// "positionId" (column "position_id") is not defined by itself because used as FK in a link 
	// "roleId" (column "role_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="user", targetEntity= Bucket.class, fetch = FetchType.EAGER)
    private List<Bucket> listOfBuckets;

    @OneToMany(mappedBy="user", targetEntity= Task.class)
    private List<Task> listOfTasks ;

    @ManyToOne
    @JoinColumn(name="position_id", referencedColumnName="id_position")
    private Position position;

    @OneToMany(mappedBy="user", targetEntity= Timer.class)
    private List<Timer> listOfTimers;

    @OneToMany(mappedBy="user", targetEntity= Share.class)
    private List<Share> listOfShares;

    @ManyToOne
    @JoinColumn(name="email_id", referencedColumnName="id_email")
    private Email email;

    @OneToMany(mappedBy="user", targetEntity=History.class)
    private List<History> listOfHistory;

    @OneToMany(mappedBy="user", targetEntity= CoOwner.class)
    private List<CoOwner> listOfCoOwners;

    @OneToMany(mappedBy="user", targetEntity= Subscription.class)
    private List<Subscription> listOfSubscriptions;

    @OneToMany(mappedBy="user", targetEntity= EndRequest.class)
    private List<EndRequest> listOfEndRequests;

    @ManyToOne
    @JoinColumn(name="role_id", referencedColumnName="id_role")
    private Role role;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public User()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdUser( Integer idUser )
    {
        this.idUser = idUser ;
    }
    public Integer getIdUser()
    {
        return this.idUser;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password )
    {
        this.password = password;
    }
    public String getPassword()
    {
        return this.password;
    }

    //--- DATABASE MAPPING : first_name ( VARCHAR ) 
    public void setFirstName( String firstName )
    {
        this.firstName = firstName;
    }
    public String getFirstName()
    {
        return this.firstName;
    }

    //--- DATABASE MAPPING : last_name ( VARCHAR ) 
    public void setLastName( String lastName )
    {
        this.lastName = lastName;
    }
    public String getLastName()
    {
        return this.lastName;
    }

    //--- DATABASE MAPPING : deleted ( BIT ) 
    public void setDeleted( Boolean deleted )
    {
        this.deleted = deleted;
    }
    public Boolean getDeleted()
    {
        return this.deleted;
    }

    public Boolean getActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfBuckets( List<Bucket> listOfBuckets )
    {
        this.listOfBuckets = listOfBuckets;
    }
    public List<Bucket> getListOfBuckets()
    {
        return this.listOfBuckets;
    }

    public void setListOfTasks( List<Task> listOfTasks )
    {
        this.listOfTasks = listOfTasks;
    }
    public List<Task> getListOfTasks()
    {
        return this.listOfTasks;
    }

    public void setPosition(Position position)
    {
        this.position = position;
    }

    public Position getPosition()
    {
        return this.position;
    }

    public void setListOfTimers( List<Timer> listOfTimers )
    {
        this.listOfTimers = listOfTimers;
    }
    public List<Timer> getListOfTimers()
    {
        return this.listOfTimers;
    }

    public void setListOfShares( List<Share> listOfShares )
    {
        this.listOfShares = listOfShares;
    }
    public List<Share> getListOfShares()
    {
        return this.listOfShares;
    }

    public void setEmail(Email email)
    {
        this.email = email;
    }
    public Email getEmail()
    {
        return this.email;
    }

    public void setListOfHistory( List<History> listOfHistory )
    {
        this.listOfHistory = listOfHistory;
    }
    public List<History> getListOfHistory()
    {
        return this.listOfHistory;
    }

    public void setListOfCoOwners( List<CoOwner> listOfCoOwners )
    {
        this.listOfCoOwners = listOfCoOwners;
    }
    public List<CoOwner> getListOfCoOwners()
    {
        return this.listOfCoOwners;
    }

    public void setRole(Role role)
    {
        this.role = role;
    }
    public Role getRole()
    {
        return this.role;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idUser);
        sb.append("]:"); 
        sb.append(password);
        sb.append("|");
        sb.append(firstName);
        sb.append("|");
        sb.append(lastName);
        sb.append("|");
        sb.append(deleted);
        return sb.toString(); 
    }

    public Integer getPositionId() {
        return position.getIdPosition();
    }

    @Override
    public Integer getArchivableId() {
        return this.idUser;
    }

    @Override
    public HistoryElementEnum getHistoryElement() {
        return HistoryElementEnum.USER;
    }

    public List<Subscription> getListOfSubscriptions() {
        return listOfSubscriptions;
    }

    public void setListOfSubscriptions(List<Subscription> listOfSubscriptions) {
        this.listOfSubscriptions = listOfSubscriptions;
    }

    public List<EndRequest> getListOfEndRequests() {
        return listOfEndRequests;
    }

    public void setListOfEndRequests(List<EndRequest> listOfEndRequests) {
        this.listOfEndRequests = listOfEndRequests;
    }
}
